#include <gtest/gtest.h>
#include "CudaBVHBuilder.cuh"
#include <algorithm>
#include <cstdio>
#include "Geometry.h"

NAMESPACE_DPHPC_BEGIN

TEST(CudaBVHBuilderTest, LeftShiftAndExpand32) {

  EXPECT_EQ(LeftShiftAndExpand32(0b00000000000000000000000101010011), 0b00000001000001000001000000001001);
  EXPECT_EQ(LeftShiftAndExpand32(0b00000000000000000000001111111111), 0b00001001001001001001001001001001);
  EXPECT_EQ(LeftShiftAndExpand32(0b00000000000000000000000111001011), 0b00000001001001000000001000001001);

}

TEST(CudaBVHBuilderTest, getMortonCode32) {

  float x = 0.3310546875f; // 0b00000000000000000000000101010011 (339)  / 1024 = 0.3310546875
  float y = 0.9990234375f; // 0b00000000000000000000001111111111 (1023) / 1024 = 0.9990234375
  float z = 0.4482421875f; // 0b00000000000000000000000111001011 (459)  / 1024 = 0.4482421875

  EXPECT_EQ(getMortonCode32(x, y, z), 0b00010111110111010011110010111111);

  x = 0.3310546875398475f; // 0b00000000000000000000000101010011 (339)  / 1024 = 0.3310546875
  y = 0.9990234375893247f; // 0b00000000000000000000001111111111 (1023) / 1024 = 0.9990234375
  z = 0.4482421875983744f; // 0b00000000000000000000000111001011 (459)  / 1024 = 0.4482421875

  EXPECT_EQ(getMortonCode32(x, y, z), 0b00010111110111010011110010111111);

}


int main(int argc, char **argv) {
  ::testing::InitGoogleTest(&argc, argv);
  return RUN_ALL_TESTS();
}

NAMESPACE_DPHPC_END